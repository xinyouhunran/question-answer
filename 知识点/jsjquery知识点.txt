1.var s = str.charCodeAt();转ASCII码

2.String.fromCharCode(65);转字母

3.es6    ... (扩展运算符)，将一个数组转化成由逗号分割的队列。

  如：arr = [1,2,3]            ...arr  => 1,2,3;
  
  当你需要找一个数组中的最小值的时候便可以Math.min(...arr);

4.arr.reduce(function(){},初始值)；累计一个数组中的元素,

  如累加：arr.reduce(function(x,y){
     
	  return x + y;

  }，0)//初始值我理解为x的初始值为0；也就是需要求和的值。

5.es6     set 集合长度用size；

6.es7     padStart（自定义长度，自定义值）头部补全 

  如：“123”.padStart（“5”，“0”）；=》“00123”；

7.Number.isInterger()用来判断一个数是否是整数。  

8.判断两个数组是否相等：arr1.toString()==arr2.toString().

9.实现反转的sort排序：sort（x=>1）//箭头函数

10.replace（）想要替换所有匹配的值时，要在正则表达式那里加上g，也就是全局，否则他只会匹配第一个。

11.$("li:gt(index));取大于索引的所有值。

12.判断二进制数能否被3整除正则表达式：var reg = /^0*(1(01*0)*10*)*$/

13.instanceOf 用来判断一个对象是否是由另一个对象生成的
   
   typeOf     用来判断类型

14.//判断二进制数能否被五整除：
	
   /*let divisibleByFive = /^(0|1(10)*(0|11)(01*01|01*00(10)*(0|11))*1)+$/*/

15.在一个数组中有null和false时；

   在转化为字符串时，null会变成空位，false会变成“false”；

   在判断数组元素是否为0或者“0”时，要用===；因为如果是==；false会转化为0。

16.将二维数组扁平化：[].concat(...arr);

17.四舍五入且保留两位小数的方法：num.toFixed(2);保留两位小数；

		   如果是   +num.toFixed(2)则代表整数依然保留整数，小数保留两位。

		   Math.round(num*100)/100；

18.反转一个数组：不用reverse（）：reverse=a=>[...a].map(a.pop,a)；

19.判断url是否能被正确链接

function checkUrl(url, name)
			{
				$.ajax({
					url: url,
					type: "get",
					dataType : 'jsonp',
					crossDomain : true,

					complete: function(xhr, textStatus) {
						if( xhr.readyState === 4 && xhr.status === 200 )
						{
							代表能访问链接成功
						}
					}
				});
			}



20.在做一些网页上的tab栏切换的时候，建议用jquery的show（）和hide（）方法来实现。（且默认隐藏的元素也用hide（）方法初始化）。

21.jquery记录index：$（this）.index（）。

22.substring（index）代表从索引处开始截取；substring（a，b）代表从下标为a处截取长度为b-a个字符。（参数不为负数）
   slice（）和substr（）形似，参数可以为负数。

23.运用jquery或者js不能直接获取到after，before的样式；如果需要修改此样式，应该新定义一个class，再给class定义after或before去覆盖之前的样式。

24.当运用layui的弹出层想弹出layui的表格时，可以如下写：

html页面：
<script type="text/html" id="alerttable">//注意type
			<div id="creattable"></div>
		</script>
js：
layui.use('table',function(){
			var table = layui.table;
			
			table.render({
				elem:“#creattable”,.....//子节点
})
})
layer.open({
		area:['1200px','600px'],
		content:$("#alerttable").html()//父节点
	});
				
25.$.extend(合并到此处，对象1，对象2)合并对象。

26.ES6 对象提供了 Object.assign()这个方法来实现浅复制。（将源对象可枚举的属性拷贝给目标对象）。

27.验证的八个正则表达式（手机号，密码，身份证，日期，验证码等）https://www.cnblogs.com/hejun26/p/9811090.html。

28.jquery提供closest（selector）方法，寻找所匹配的第一个选择器元素，dom向上遍历。

29.Object.create()创建一个新对象，使用现有的对象来提供新创建的对象的__proto__。（可以用此方法来实现类式继承）

30.Symbol的作用非常的专一，换句话说其设计出来就只有一个目的――作为对象属性的唯一标识符，防止对象属性冲突发生。
(https://www.zhangxinxu.com/wordpress/2018/04/known-es6-symbol-function/)

31.js移除Array中指定元素：

首先需要找到元素的下标：

var array = [2, 5, 9];
var index = array.indexOf(5);
使用splice函数进行移除：

if (index > -1) {
    array.splice(index, 1);
}

32.用 apply 将数组添加到另一个数组
concat确实具有我们想要的行为，但它实际上并不附加到现有数组，而是创建并返回一个新数组。 但是我们想要附加到我们现有的阵列：
var array = ['a', 'b'];
var elements = [0, 1, 2];
array.push.apply(array, elements);
console.info(array); // ["a", "b", 0, 1, 2]

33.正则表达式中\s代表匹配空格；\S代表非空白字符。

34.我也不知道为什么，网上也有很多iframe获取父页面的元素和获取子页面的元素，可我偏偏就只能从子iframe获取父页面的dom元素；奇了怪了，记录一下：
window.parent.document.getElementById("id");子iframe获取父级的元素。

35.正则表达式懒惰限定符：（列举两个）（详情见https://www.cnblogs.com/lizhenlin/p/6654934.html）
"*?"   重复任意次，但尽可能少重复 
　　    如 "acbacb"  正则  "a.*?b" 只会取到第一个"acb" 原本可以全部取到但加了限定符后，只会匹配尽可能少的字符 ，而"acbacb"最少字符的结果就是"acb" 

"??"  重复0次或1次，但尽可能少重复
　　    如 "aaacb" 正则 "a.??b" 只会取到最后的三个字符"acb"

36.伪数组转化为数组：(均不改变原伪数组)
   可以用es6的Array.from();
   var arr = Array.prototype.slice.call(arguments);

37.$("table").on("click","tbody tr td:nth-child(n)",function(){})  //n取整数，代表点击表格的第几列触发。

38.要习惯使用axios去获取数据（https://www.kancloud.cn/yunye/axios/234845）

39.正则表达式 ？代表前面的字符只能匹配一次。

40.str.match（/reg/）得到一个数组，数组第一个值为结果，第二个值为子表达式，且它会按照最长匹配的字符串进行获取。

41.前端图片压缩上传(纯js的质量压缩，非长宽压缩)（https://www.cnblogs.com/007sx/p/7583202.html）

42.$("<img/>")为一个set的方法，是建立一个新的标签元素"img"并赋予相应标签相应的属性，如：$("<img/>").attr("src", src).load(function () {})

43.ajax设置成同步时（async:false），浏览器的渲染(UI)线程和js线程是互斥的，在执行js耗时操作时，页面渲染会被阻塞掉。
当我们执行异步ajax的时候没有问题，但当设置为同步请求时，其他的动作（ajax函数后面的代码，还有渲染线程）都会停止下来。

44.$("img").size()计算文档中所有图片的数量==$("img").length。

45.$("img").selector返回传给jQuery（）的原始选择器，此处为ul。

46.jquery ajax参数：traditional:true时，传值时可以传数组。

47.ajax 与 xhrFields: { withCredentials: true }：
xhrFields 大概的意思是，默认情况下，标准的跨域请求是不会发送cookie等用户认证凭据的。
所以，当你再次访问远程api的时候，cookie是不会被带上的，于是乎，服务器理所当然地认为你还没有登录。
用XMLHttpRequest请求的时候，我们需要设置属性 withCredentials=true ;