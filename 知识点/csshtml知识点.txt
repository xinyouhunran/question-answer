1.background:url()#000 ;代表当图片不够充满容器时，用黑色填满。

2.height:inherit;继承父级元素的高度。

	当子元素给了绝对定位，父元素不给相对定位，子元素也能适配高度。

3.网上有在线excel表格转json数据。

4.对于现代浏览器，例如webkit内核的浏览器，或者移动端，是可以实现多行文本内容超出点点点…最后一行显示的，典型的CSS组合如下：

.box {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
}
其中-webkit-line-clamp就是控制行数的，是3就是显示3行，3行结束点点点，如果是2则最多2行。

5.textarea中设置value属性是不生效的，可以用js赋值，或者用placeholder。

6.placeholder的文字颜色不可被改变。

7.IE对小数像素采取取整的策略，类似于Math.floor()方法，就算你大小为11.999999像素，最后还是显示11像素文字的大小；

  而Firefox等一些浏览器则采取四舍五入的策略，类似于Math.round()方法，11.4像素就表现为11像素，11.5像素就表现为12像素。

  可以利用此项规则解决一些偏差在一像素内的ie和其他浏览器的兼容问题。

8.传统<script>属性支持一个名为defer的属性值，可以让JS资源异步加载，同时保持顺序

<!-- 同步 -->
<script src="1.js"></script>

<!-- 异步但顺序保证 -->
<script defer src="2.js"></script>
<script defer src="3.js"></script>

9.<a href="#" rel="internal">123</a>瞬间回到顶部

10.设置多个背景background: url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;用逗号隔开。

   background-origin：有三个属性值：content-box, padding-box,和 border-box

   background-attchment:背景图片跟不跟随滚动条滚动

11.改变输入框光标颜色：CSS caret-color属性可以改变输入框插入光标的颜色。input { color: #333; caret-color: red;}

12.conic-gradient锥形渐变，mask遮罩属性。

13.shape-outside:可以让内联元素以不规则的形状进行外部排列

14.background-size是css3中新增的属性，background-size的cover特定值会保持图像本身的宽高比例，将图片缩放到正好完全覆盖定义背景的区域。

15.CSS中原生的变量定义语法是：--*，变量使用语法是：var(--*)，其中*表示我们的变量名称。
:root {            //根元素
  --1: #369;
}
body {
  background-color: var(--1);
}

16.要想使图片边框不存在，img标签需带有属性alt=“ ”。

17.如果想利用  position：absolute；top：0；right：0；bottom:0;left:0;margin：auto；实现子盒子垂直水平居中；则子盒子需要给width和height；

18.position：sticky；
position属性中最有意思的就是sticky了，设置了sticky的元素，在屏幕范围（viewport）时该元素的位置并不受到定位影响（设置是top、left等属性无效），
当该元素的位置将要移出偏移范围时，定位又会变成fixed，根据设置的left、top等属性成固定位置的效果。（不会脱离文档流）

19.当父元素有transfrom属性时，给子元素设置fixed会被影响，会被解析成absolute。

20.解决复选框，单选框与文字不对齐：（此处列举两种,给复/单选框加样式）
基于vertical-align:top;height：父盒子的高度；margin-top:0;
基于vertical-align：text-top;height:文字的大小；margin-top：0；

21.flex-grow:默认值0；分配剩余空间的扩张比例；

flex-basis:默认值auto；倘若设置了此属性，那么计算剩余空间之前要优先减去此属性，且它的层级比width高，会将width覆盖。

有一点需要注意，如果flex-basis和width其中有一个是auto，那么另外一个非auto的属性优先级会更高。（也就是非auto的会覆盖auto的）。

flex-shrink：默认值1；分配多余的空间压缩比例。

设为0则代表无论如何都不压缩此子盒子。

flex:flex-grow flex-shrink flex-basis;默认0 1 auto；
当flex取值为none，则计算值为0 0 auto；
当flex取值为auto，则计算值为1 1 auto；
当flex取值为一个非负数字，则该数字为flex-grow的值，计算值为 非负数字 1 0%；
当flex取值为一个长度或百分比，则该值为flex-basis的值，计算值为1 1 该值；
当flex取值为两个非负数字，则分别视为flex-grow flex-shrink的值，计算值为两个非负数字 0%；
当flex取值为一个非负数字和一个长度或百分比，则分别视为flex-grow flex-basis的值，计算值为非负数字 1 长度或百分比；

