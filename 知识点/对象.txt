https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object

1.Object.assign(target,...source) 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。

2.Object.create()方法创建一个新对象，使用现有的对象来提供新创建的对象的__proto__。 
子类.prototype = Object.create(父类.prototype);

3.Object.defineProperties(obj,props) 方法直接在一个对象上定义新的属性或修改现有属性，并返回该对象。

4.Object.defineProperty(obj,propname,descriptor) 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性， 并返回这个对象。

5.属性描述符
数据描述符：

Writable 属性
当writable属性设置为false时，该属性被称为“不可写”。它不能被重新分配。默认为false

Enumerable 特性
enumerable定义了对象的属性是否可以在 for...in 循环和 Object.keys() 中被枚举。默认为false

Configurable 特性
configurable特性表示对象的属性是否可以被删除，以及除writable特性外的其他特性是否可以被修改。默认为false

value
该属性对应的值。可以是任何有效的 JavaScript 值（数值，对象，函数等）。默认为 undefined。

存取描述符：set，get

6.Object.entries(obj)方法返回一个给定对象自身可枚举属性的键值对数组，其排列与使用 for...in 循环遍历该对象时返回的顺序一致
（区别在于 for-in 循环也枚举原型链中的属性）。
const obj = { foo: 'bar', baz: 42 };
console.log(Object.entries(obj)); // [ ['foo', 'bar'], ['baz', 42] ]
var map = new Map(Object.entries(obj));
console.log(map); // Map { foo: "bar", baz: 42 }

7.Object.freeze(obj) 方法可以冻结一个对象，冻结指的是不能向这个对象添加新的属性，不能修改其已有属性的值，不能删除已有属性，
以及不能修改该对象已有属性的可枚举性、可配置性、可写性。该方法返回被冻结的对象。

8.Object.getOwnPropertyDescriptor() 方法返回指定对象上一个自有属性对应的属性描述符。
（自有属性指的是直接赋予该对象的属性，不需要从原型链上进行查找的属性）

9.Object.getOwnPropertyDescriptors() 方法用来获取一个对象的所有自身属性的描述符。

10.Object.getOwnPropertyNames()方法返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括Symbol值作为名称的属性）组成的数组。

11.Object.getOwnPropertySymbols() 方法返回一个给定对象自身的所有 Symbol 属性的数组。

12.Object.getPrototypeOf() 方法返回指定对象的原型（内部[[Prototype]]属性的值）。

13.Object.is()方法判断两个值是否是相同的值。

Object.is() 判断两个值是否相同。如果下列任何一项成立，则两个值相同：

两个值都是 undefined
两个值都是 null
两个值都是 true 或者都是 false
两个值是由相同个数的字符按照相同的顺序组成的字符串
两个值指向同一个对象
两个值都是数字并且
都是正零 +0
都是负零 -0
都是 NaN
都是除零和 NaN 外的其它同一个数字

这种相等性判断逻辑和传统的 == 运算符所用的不同，== 运算符会对它两边的操作数做隐式类型转换（如果它们类型不同），
然后才进行相等性比较，（所以才会有类似 "" == false 为 true 的现象），但 Object.is 不会做这种类型转换。

这与===运算符也不一样。===运算符（和==运算符）将数字值-0和+0视为相等，并认为Number.NaN不等于NaN。

14.Object.isExtensible() 方法判断一个对象是否是可扩展的（是否可以在它上面添加新的属性）。

15.Object.isFrozen()方法判断一个对象是否被冻结。

16.Object.isSealed() 方法判断一个对象是否被密封。密封对象是指那些不可 扩展 的，且所有自身属性都不可配置且因此不可删除（但不一定是不可写）的对象。

17.Object.keys() 方法会返回一个由一个给定对象的自身可枚举属性组成的数组，数组中属性名的排列顺序和使用 for...in 循环遍历该对象时返回的顺序一致 。

18.hasOwnProperty() 方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性.

19.isPrototypeOf() 方法用于测试一个对象是否存在于另一个对象的原型链上。

20.propertyIsEnumerable() 方法返回一个布尔值，表示指定的属性是否可枚举。

21.Object.preventExtensions()方法让一个对象变的不可扩展，也就是永远不能再添加新的属性。

22.Object.seal()方法封闭一个对象，阻止添加新属性并将所有现有属性标记为不可配置。当前属性的值只要可写就可以改变。